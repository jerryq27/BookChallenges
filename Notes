|Notes|

Abstract Classes
----------------
Abstract classes are meant to be super classes for other classes.
They hold the general information, while subclasses hold the specific information.

Abstract classes are classes not meant to be instantiated, but extended to. 
They can have fields, constructors, and methods like a normal class, but 
they can also have abstract methods (methods with no body) in which a class 
that extends it must override.

A class can also have an abstract method, but once it dos, it can no longer
be instantiated, essentially, the class becomes an abstract class. 

A subclass can still be instantiated with specifying the super abstract class
first when creating a new object.

GUI With Swing
--------------
In order to get setLocationRelativeTo(null) to work, it must be called after pack().
pack() shouldn't be used if the size of the content pane is specified.
pack() can be used with panels, if the panel has a set size (setPreferredSize works, but setSize has issues.)
pack() can be used with panels, but make sure the panels have components, otherwise it will pack into a small window.
To re-pack() a window based on a JPanel, for example, call setPreferredSize with a new dimension (that of the panel) then pack().
